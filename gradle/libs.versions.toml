[versions]
agp = "8.2.2"
kotlin = "1.9.21"
kotlinx-serialization = "1.6.2"
ktor = "2.3.7"
compose = "1.6.0"
compose-compiler = "1.5.4"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.2"
jetbrainsKotlinJvm = "1.9.21"

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrainsKotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-x-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

#KTOR
io-ktor-ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
io-ktor-ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
io-ktor-ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
io-ktor-ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
io-ktor-ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
io-ktor-ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
io-ktor-ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
io-ktor-ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
io-ktor-ktor-client-mock-jvm = { module = "io.ktor:ktor-client-mock-jvm", version.ref = "ktor" }

[bundles]
ktor-client = [
    "io-ktor-ktor-client-core",
    "io-ktor-ktor-client-okhttp",
    "io-ktor-ktor-client-content-negotiation",
    "io-ktor-ktor-client-resources",
    "io-ktor-ktor-client-auth",
    "io-ktor-ktor-serialization-kotlinx-json",
    "io-ktor-ktor-client-logging",
    "io-ktor-ktor-client-mock", #TODO: remove when we have the API connection set up (see test-ktor)
    "io-ktor-ktor-client-mock-jvm", #TODO: remove when we have the API connection set up (see test-ktor)
]
